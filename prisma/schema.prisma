generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Treatment {
  id            String    @id @default(uuid())
  datePerformed DateTime? @db.Date
  workerId      String?
  dogId         String?
  name          String?   @db.VarChar(45)
  worker        Worker?   @relation(fields: [workerId], references: [id])
  Dog           dogs?     @relation(fields: [dogId], references: [id])

  @@index([workerId])
  @@index([dogId])
}

model Vaccine {
  id               String    @id @default(uuid())
  name             String?   @db.VarChar(45)
  dateAdministered DateTime? @db.Date
  workerId         String?
  dogId            String?
  worker           Worker?   @relation(fields: [workerId], references: [id])
  dog              dogs?     @relation(fields: [dogId], references: [id])

  @@index([workerId])
  @@index([dogId])
}

model Adopters {
  id         String     @id @default(uuid())
  name       String?    @db.VarChar(45)
  familyName String?    @db.VarChar(45)
  address    String?    @db.VarChar(45)
  cityCode   Int?
  phone      String?
  city       City?      @relation(fields: [cityCode], references: [code])
  Adoption   Adoption[]

  @@index([cityCode])
}

model Adoption {
  id           String    @id @default(uuid())
  dogsId       String?   @unique
  adoptionDate DateTime? @db.Date
  workerId     String?
  adoptersId   String
  dog          dogs?     @relation(fields: [dogsId], references: [id])
  worker       Worker?   @relation(fields: [workerId], references: [id])
  adopters     Adopters  @relation(fields: [adoptersId], references: [id])

  @@index([workerId])
  @@index([dogsId])
  @@index([adoptersId])
}

model City {
  name      String     @db.VarChar(45)
  stateName String?    @db.VarChar(45)
  code      Int        @id
  state     State?     @relation(fields: [stateName], references: [name])
  Delivers  Delivers[]
  Adopters  Adopters[]

  @@index([stateName])
}

model Delivers {
  id         String     @id @default(uuid())
  name       String?    @db.VarChar(45)
  familyName String?    @db.VarChar(45)
  address    String?
  phone      String?
  cityCode   Int?
  city       City?      @relation(fields: [cityCode], references: [code])
  Delivery   Delivery[]

  @@index([cityCode])
}

model Delivery {
  id           String    @id @default(uuid())
  dogsId       String?   @unique
  deliveryDate DateTime? @db.Date
  workerId     String?
  deliversId   String?
  dog          dogs?     @relation(fields: [dogsId], references: [id])
  worker       Worker?   @relation(fields: [workerId], references: [id])
  delivers     Delivers? @relation(fields: [deliversId], references: [id])

  @@index([workerId])
  @@index([dogsId])
  @@index([deliversId])
}

model dogs {
  id         String      @id @default(uuid())
  chipNum    String?
  diskit     String?
  name       String?     @db.VarChar(45)
  status     String?     @db.VarChar(45)
  cabin      String?     @db.VarChar(45)
  breed      String?     @db.VarChar(45)
  size       String?     @db.VarChar(45)
  gender     String?     @db.VarChar(45)
  birthDate  DateTime?   @db.Date
  arriveDate DateTime?   @db.Date
  leaveDate  DateTime?   @db.Date
  vaccine    Vaccine[]
  adoption   Adoption?
  delivery   Delivery?
  treatments Treatment[]
}

model State {
  name    String  @id @db.VarChar(45)
  vetName String? @db.VarChar(45)
  phone   Int?
  City    City[]
}

model Worker {
  id         String      @id @default(uuid())
  name       String?     @db.VarChar(45)
  familyName String?     @db.VarChar(45)
  job        String?     @db.VarChar(45)
  phone      Int?
  Vaccine    Vaccine[]
  Treatment  Treatment[]
  Adoption   Adoption[]
  Delivery   Delivery[]
}
